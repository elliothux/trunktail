import { cn } from '@/lib/utils';
import { Box } from 'lucide-react';

interface Props {
  name: string;
  org?: string;
  digest: string;
  size?: number;
  className?: string;
}

export function ImageIcon({ name, org, digest, className, size = 32 }: Props) {
  const icon = getIconName(name, org);
  const color = getColorFromDigest(digest);
  const innerSize = size - 14;
  return (
    <div
      className="flex items-center justify-center rounded-full text-white"
      style={{
        backgroundColor: color,
        width: size,
        height: size,
      }}
    >
      {icon ? (
        <i className={cn(`devicon-${icon}-plain`, className)} style={{ fontSize: innerSize }} />
      ) : (
        <Box size={innerSize} className={className} />
      )}
    </div>
  );
}

function getIconName(name: string, org?: string) {
  for (const [key, value] of Array.from(alias.entries())) {
    if (name.toLowerCase().includes(key)) {
      return value;
    }
  }
  for (const iconName of Array.from(icons)) {
    if (name.toLowerCase().includes(iconName)) {
      return iconName;
    }
  }
  if (org != null) {
    if (orgs.has(org)) {
      return alias.get(org) ?? org;
    }
  }
  return null;
}

const presetColors = [
  '#5EABD6',
  '#00CAFF',
  '#4300FF',
  '#344CB7',
  '#E14434',
  '#FE5D26',
  '#347928',
  '#f38327',
  '#161D6F',
  '#E5989B',
  '#471396',
  '#9B7EBD',
  '#FFCC00',
  '#03A791',
  '#06923E',
  '#A76545',
  '#FF0B55',
  '#872341',
  '#0B192C',
  '#222222',
];

function getColorIndex(str: string): number {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = (hash * 31 + str.charCodeAt(i)) >>> 0;
  }
  return hash % presetColors.length;
}

function getColorFromDigest(digest: string) {
  const hash = digest.split(':')[1];
  const str = hash.slice(0, 4) + hash.slice(-4);
  return presetColors[getColorIndex(str)];
}

const alias = new Map<string, string>([
  ['kafka', 'apachekafka'],
  ['conda', 'anaconda'],
  ['.net', 'dot-net'],
  ['dotnet', 'dotnetcore'],
  ['tailwind', 'tailwindcss'],
  ['css', 'css3'],
  ['sqlserver', 'microsoftsqlserver'],
  ['k8s', 'kubernetes'],
  ['aws', 'amazonwebservices'],
  ['node', 'nodejs'],
  ['bunjs', 'bun'],
  ['postgres', 'postgresql'],
  ['gcp', 'googlecloud'],
  ['discord', 'discordjs'],
]);

const orgs = new Set([
  'apple',
  'aws',
  'google',
  'github',
  'vercel',
  'jetbrains',
  'oracle',
  'facebook',
  'digitalocean',
  'cloudflare',
  'gitlab',
  'discord',
  'centos',
  'fedora',
  'ubuntu',
  'notion',
]);

// https://github.com/devicons/devicon/tree/master/icons
const icons = new Set([
  'aarch64',
  'adonisjs',
  'aftereffects',
  'akka',
  'algolia',
  'alpinejs',
  'amazonwebservices',
  'anaconda',
  'android',
  'androidstudio',
  'angular',
  'angularjs',
  'angularmaterial',
  'ansible',
  'antdesign',
  'apache',
  'apacheairflow',
  'apachekafka',
  'apachespark',
  'apl',
  'appcelerator',
  'apple',
  'appwrite',
  'archlinux',
  'arduino',
  'argocd',
  'astro',
  'atom',
  'awk',
  'axios',
  'azure',
  'azuredevops',
  'azuresqldatabase',
  'babel',
  'backbonejs',
  'ballerina',
  'bamboo',
  'bash',
  'beats',
  'behance',
  'bitbucket',
  'blazor',
  'blender',
  'bootstrap',
  'bower',
  'browserstack',
  'bulma',
  'bun',
  'cairo',
  'cakephp',
  'canva',
  'capacitor',
  'carbon',
  'cassandra',
  'centos',
  'ceylon',
  'chrome',
  'circleci',
  'clarity',
  'clion',
  'clojure',
  'clojurescript',
  'cloudflare',
  'cloudflareworkers',
  'cmake',
  'codeac',
  'codecov',
  'codeigniter',
  'codepen',
  'coffeescript',
  'composer',
  'confluence',
  'consul',
  'contao',
  'corejs',
  'cosmosdb',
  'couchbase',
  'couchdb',
  'cplusplus',
  'crystal',
  'csharp',
  'css3',
  'cucumber',
  'cypressio',
  'd3js',
  'dart',
  'datagrip',
  'dataspell',
  'dbeaver',
  'debian',
  'denojs',
  'devicon',
  'digitalocean',
  'discordjs',
  'django',
  'djangorest',
  'docker',
  'doctrine',
  'dot-net',
  'dotnetcore',
  'dreamweaver',
  'dropwizard',
  'drupal',
  'dynamodb',
  'eclipse',
  'ecto',
  'elasticsearch',
  'electron',
  'eleventy',
  'elixir',
  'elm',
  'emacs',
  'embeddedc',
  'ember',
  'envoy',
  'erlang',
  'eslint',
  'express',
  'facebook',
  'fastapi',
  'fastify',
  'faunadb',
  'feathersjs',
  'fedora',
  'figma',
  'filezilla',
  'firebase',
  'firefox',
  'flask',
  'flutter',
  'fortran',
  'foundation',
  'framermotion',
  'framework7',
  'fsharp',
  'gatling',
  'gatsby',
  'gazebo',
  'gcc',
  'gentoo',
  'ghost',
  'gimp',
  'git',
  'gitbook',
  'github',
  'githubactions',
  'githubcodespaces',
  'gitlab',
  'gitpod',
  'gitter',
  'go',
  'godot',
  'goland',
  'google',
  'googlecloud',
  'gradle',
  'grafana',
  'grails',
  'graphql',
  'groovy',
  'grpc',
  'grunt',
  'gulp',
  'hadoop',
  'handlebars',
  'hardhat',
  'harvester',
  'haskell',
  'haxe',
  'helm',
  'heroku',
  'hibernate',
  'homebrew',
  'html5',
  'hugo',
  'ie10',
  'ifttt',
  'illustrator',
  'influxdb',
  'inkscape',
  'insomnia',
  'intellij',
  'ionic',
  'jaegertracing',
  'jamstack',
  'jasmine',
  'java',
  'javascript',
  'jeet',
  'jekyll',
  'jenkins',
  'jest',
  'jetbrains',
  'jetpackcompose',
  'jira',
  'jiraalign',
  'jquery',
  'json',
  'jule',
  'julia',
  'junit',
  'jupyter',
  'k3os',
  'k3s',
  'kaggle',
  'karatelabs',
  'karma',
  'kdeneon',
  'keras',
  'kibana',
  'knexjs',
  'knockout',
  'kotlin',
  'krakenjs',
  'ktor',
  'kubernetes',
  'labview',
  'laravel',
  'latex',
  'less',
  'linkedin',
  'linux',
  'liquibase',
  'livewire',
  'llvm',
  'lodash',
  'logstash',
  'lua',
  'lumen',
  'magento',
  'mariadb',
  'markdown',
  'materializecss',
  'materialui',
  'matlab',
  'matplotlib',
  'maven',
  'maya',
  'meteor',
  'microsoftsqlserver',
  'minitab',
  'mithril',
  'mobx',
  'mocha',
  'modx',
  'moleculer',
  'mongodb',
  'mongoose',
  'moodle',
  'msdos',
  'mysql',
  'nano',
  'neo4j',
  'neovim',
  'nestjs',
  'netlify',
  'networkx',
  'nextjs',
  'nginx',
  'ngrx',
  'nhibernate',
  'nim',
  'nimble',
  'nixos',
  'nodejs',
  'nodemon',
  'nodewebkit',
  'nomad',
  'norg',
  'notion',
  'npm',
  'nuget',
  'numpy',
  'nuxtjs',
  'oauth',
  'objectivec',
  'ocaml',
  'ohmyzsh',
  'okta',
  'openal',
  'openapi',
  'opencl',
  'opencv',
  'opengl',
  'openstack',
  'opensuse',
  'opentelemetry',
  'opera',
  'oracle',
  'ory',
  'p5js',
  'packer',
  'pandas',
  'perl',
  'pfsense',
  'phalcon',
  'phoenix',
  'photonengine',
  'photoshop',
  'php',
  'phpstorm',
  'playwright',
  'plotly',
  'pnpm',
  'podman',
  'poetry',
  'polygon',
  'portainer',
  'postcss',
  'postgresql',
  'postman',
  'powershell',
  'premierepro',
  'prisma',
  'processing',
  'prolog',
  'prometheus',
  'protractor',
  'pulsar',
  'pulumi',
  'puppeteer',
  'purescript',
  'putty',
  'pycharm',
  'pypi',
  'pyscript',
  'pytest',
  'python',
  'pytorch',
  'qodana',
  'qt',
  'quarkus',
  'quasar',
  'qwik',
  'rabbitmq',
  'rails',
  'railway',
  'rancher',
  'raspberrypi',
  'reach',
  'react',
  'reactbootstrap',
  'reactnavigation',
  'reactrouter',
  'readthedocs',
  'realm',
  'rect',
  'redhat',
  'redis',
  'redux',
  'renpy',
  'replit',
  'rider',
  'rocksdb',
  'rockylinux',
  'rollup',
  'ros',
  'rspec',
  'rstudio',
  'ruby',
  'rubymine',
  'rust',
  'rxjs',
  'safari',
  'salesforce',
  'sanity',
  'sass',
  'scala',
  'scalingo',
  'scikitlearn',
  'sdl',
  'selenium',
  'sema',
  'sentry',
  'sequelize',
  'shopware',
  'shotgrid',
  'sketch',
  'slack',
  'socketio',
  'solidity',
  'solidjs',
  'sonarqube',
  'sourcetree',
  'spack',
  'splunk',
  'spring',
  'spss',
  'spyder',
  'sqlalchemy',
  'sqldeveloper',
  'sqlite',
  'ssh',
  'stackoverflow',
  'stata',
  'storybook',
  'streamlit',
  'stylus',
  'subversion',
  'supabase',
  'svelte',
  'swagger',
  'swift',
  'swiper',
  'symfony',
  'tailwindcss',
  'tauri',
  'tensorflow',
  'terraform',
  'tex',
  'thealgorithms',
  'threedsmax',
  'threejs',
  'titaniumsdk',
  'tomcat',
  'tortoisegit',
  'towergit',
  'traefikmesh',
  'traefikproxy',
  'travis',
  'trello',
  'trpc',
  'twitter',
  'typescript',
  'typo3',
  'ubuntu',
  'unifiedmodelinglanguage',
  'unity',
  'unix',
  'unrealengine',
  'uwsgi',
  'v8',
  'vagrant',
  'vala',
  'vault',
  'vercel',
  'vertx',
  'vim',
  'visualbasic',
  'visualstudio',
  'vite',
  'vitejs',
  'vitess',
  'vitest',
  'vscode',
  'vsphere',
  'vuejs',
  'vuestorefront',
  'vuetify',
  'vyper',
  'wasm',
  'webflow',
  'weblate',
  'webpack',
  'webstorm',
  'windows11',
  'windows8',
  'woocommerce',
  'wordpress',
  'xamarin',
  'xcode',
  'xml',
  'yaml',
  'yarn',
  'yii',
  'yugabytedb',
  'yunohost',
  'zend',
  'zig',
]);

function getColorIndexFromString(str: string): number {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = (hash * 31 + str.charCodeAt(i)) >>> 0;
  }
  return hash % presetColors.length;
}
